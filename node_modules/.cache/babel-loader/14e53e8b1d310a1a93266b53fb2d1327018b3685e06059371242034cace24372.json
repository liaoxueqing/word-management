{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nexport default {\n  name: 'WordManagement',\n  props: {\n    words: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      newWords: ''\n    };\n  },\n  methods: {\n    handleAddClick() {\n      this.$emit('update:newWords', this.newWords);\n      this.newWords = '';\n    },\n    handleExportClick() {\n      const data = this.words.map(word => word.text).join(\" \");\n      const blob = new Blob([JSON.stringify(data, null, 2)], {\n        type: 'application/json'\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `words-${new Date().toLocaleDateString()}.doc`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  }\n};","map":{"version":3,"names":["name","props","words","type","Array","default","data","newWords","methods","handleAddClick","$emit","handleExportClick","map","word","text","join","blob","Blob","JSON","stringify","url","URL","createObjectURL","a","document","createElement","href","download","Date","toLocaleDateString","body","appendChild","click","removeChild"],"sources":["/Users/xueqing/my-local-record/src/components/NewWordManagement.vue"],"sourcesContent":["<template>\n  <el-row :wrap=\"true\" :gutter=\"20\" class=\"create-area\">\n    <el-col :xs=\"24\" :sm=\"12\" :md=\"6\" :lg=\"4\">\n      <el-input\n        v-model=\"newWords\"\n        :rows=\"3\"\n        type=\"textarea\"\n        placeholder=\"Please input\"\n      />\n    </el-col>\n    <el-col :xs=\"24\" :sm=\"12\" :md=\"6\" :lg=\"4\">\n      <el-button type=\"primary\" @click=\"handleAddClick\">增加</el-button>\n      <el-button @click=\"handleExportClick\">导出字库</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nexport default {\n  name: 'WordManagement',\n\n  props: {\n    words: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      newWords: ''\n    }\n  },\n  methods: {\n    handleAddClick() {\n      this.$emit('update:newWords', this.newWords);\n        this.newWords = ''\n    },\n\n    handleExportClick() {\n      const data = this.words.map(word => word.text).join(\" \")\n      const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' })\n      const url = URL.createObjectURL(blob)\n\n      const a = document.createElement('a')\n      a.href = url\n      a.download = `words-${new Date().toLocaleDateString()}.doc`\n      document.body.appendChild(a)\n      a.click()\n      document.body.removeChild(a)}\n  }\n}\n</script>\n\n<style scoped>\n.words-management {\n  padding: 20px;\n}\n\n.word-item {\n  font-size: 32px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;  /* 垂直居中 */\n  justify-content: center;  /* 水平居中 */\n}\n:deep(.init) {\n  background-color: #f5f7fa;\n}\n:deep(.recognized) {\n  background-color: #67c23a;\n}\n:deep(.unrecognized) {\n  background-color: #ff6666;\n}\n</style>"],"mappings":";;AAkBA,eAAe;EACbA,IAAI,EAAE,gBAAgB;EAEtBC,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,KAAK;MACXC,OAAO,EAAEA,CAAA,KAAM;IACjB;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAAA,EAAG;MACf,IAAI,CAACC,KAAK,CAAC,iBAAiB,EAAE,IAAI,CAACH,QAAQ,CAAC;MAC1C,IAAI,CAACA,QAAO,GAAI,EAAC;IACrB,CAAC;IAEDI,iBAAiBA,CAAA,EAAG;MAClB,MAAML,IAAG,GAAI,IAAI,CAACJ,KAAK,CAACU,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACC,IAAI,CAAC,CAACC,IAAI,CAAC,GAAG;MACvD,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAAC,CAACC,IAAI,CAACC,SAAS,CAACb,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;QAAEH,IAAI,EAAE;MAAmB,CAAC;MACnF,MAAMiB,GAAE,GAAIC,GAAG,CAACC,eAAe,CAACN,IAAI;MAEpC,MAAMO,CAAA,GAAIC,QAAQ,CAACC,aAAa,CAAC,GAAG;MACpCF,CAAC,CAACG,IAAG,GAAIN,GAAE;MACXG,CAAC,CAACI,QAAO,GAAI,SAAS,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,MAAK;MAC1DL,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACR,CAAC;MAC3BA,CAAC,CAACS,KAAK,CAAC;MACRR,QAAQ,CAACM,IAAI,CAACG,WAAW,CAACV,CAAC,CAAC;IAAA;EAChC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}