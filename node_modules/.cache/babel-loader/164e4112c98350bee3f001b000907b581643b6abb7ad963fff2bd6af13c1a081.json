{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"main\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_row, {\n    wrap: true,\n    gutter: 20,\n    class: \"create-area\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      xs: 24,\n      sm: 12,\n      md: 6,\n      lg: 4\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.newWords,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newWords = $event),\n        rows: 3,\n        type: \"textarea\",\n        placeholder: \"Please input\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      xs: 24,\n      sm: 12,\n      md: 6,\n      lg: 4\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.addWords\n      }, {\n        default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"增加\")])),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _createVNode($setup[\"ElTabs\"], {\n    modelValue: $setup.activeName,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.activeName = $event)\n  }, {\n    default: _withCtx(() => [_createVNode($setup[\"ElTabPane\"], {\n      label: \"航认字\",\n      name: \"first\"\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"WordManagement\"], {\n        words: $setup.words1,\n        \"onUpdate:words\": _cache[1] || (_cache[1] = updatedWords => $setup.handleWordsUpdate('words2', updatedWords))\n      }, null, 8 /* PROPS */, [\"words\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode($setup[\"ElTabPane\"], {\n      label: \"皓皓认字\",\n      name: \"second\"\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"WordManagement\"], {\n        words: $setup.words2,\n        \"onUpdate:words\": _cache[2] || (_cache[2] = updatedWords => $setup.handleWordsUpdate('words2', updatedWords))\n      }, null, 8 /* PROPS */, [\"words\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode($setup[\"ElTabPane\"], {\n      label: \"航古诗背诵\",\n      name: \"third\"\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"PoetryManagement\"], {\n        poetryList: $setup.poetries1\n      }, null, 8 /* PROPS */, [\"poetryList\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode($setup[\"ElTabPane\"], {\n      label: \"皓皓古诗背诵\",\n      name: \"fourth\"\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"PoetryManagement\"], {\n        poetryList: $setup.poetries2\n      }, null, 8 /* PROPS */, [\"poetryList\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_row","wrap","gutter","default","_withCtx","_component_el_col","xs","sm","md","lg","_component_el_input","modelValue","$setup","newWords","_cache","$event","rows","type","placeholder","_","_component_el_button","onClick","addWords","_createTextVNode","activeName","label","name","words","words1","updatedWords","handleWordsUpdate","words2","poetryList","poetries1","poetries2"],"sources":["/Users/xueqing/my-local-record/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"main\">\n    <el-row :wrap=\"true\" :gutter=\"20\" class=\"create-area\">\n      <el-col :xs=\"24\" :sm=\"12\" :md=\"6\" :lg=\"4\">\n        <el-input\n        v-model=\"newWords\"\n        :rows=\"3\"\n        type=\"textarea\"\n        placeholder=\"Please input\"\n      />\n      </el-col>\n      <el-col :xs=\"24\" :sm=\"12\" :md=\"6\" :lg=\"4\">\n        <el-button type=\"primary\" @click=\"addWords\">增加</el-button>\n      </el-col>\n    </el-row>\n  <el-tabs v-model=\"activeName\">\n    <el-tab-pane label=\"航认字\" name=\"first\">\n      <WordManagement :words=\"words1\"\n                      @update:words=\"(updatedWords) => handleWordsUpdate('words2', updatedWords)\"\n      ></WordManagement>\n    </el-tab-pane>\n    <el-tab-pane label=\"皓皓认字\" name=\"second\">\n      <WordManagement :words=\"words2\"\n                      @update:words=\"(updatedWords) => handleWordsUpdate('words2', updatedWords)\"\n      ></WordManagement>\n    </el-tab-pane>\n    <el-tab-pane label=\"航古诗背诵\" name=\"third\">\n      <PoetryManagement :poetryList=\"poetries1\"></PoetryManagement>\n    </el-tab-pane>\n    <el-tab-pane label=\"皓皓古诗背诵\" name=\"fourth\">\n      <PoetryManagement  :poetryList=\"poetries2\"></PoetryManagement></el-tab-pane>\n  </el-tabs>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport WordManagement from './components/WordManagement.vue'\nimport PoetryManagement from './components/PoetryManagement.vue'\nimport { ElTabs, ElTabPane } from 'element-plus'\n\nconst activeName = ref('first')\n//todo 从文件读值\nconst words1 = ref([])\nconst words2 = ref([])\nconst newWords = ref('')\nconst poetries1 = ref(['静夜思'])\nconst poetries2 = ref(['春晓'])\n\nonMounted(() => {\n  words1.value = JSON.parse(localStorage.getItem('first')) || [];\n  words2.value = JSON.parse(localStorage.getItem('second')) || [];\n})\n\nconst handleWordsUpdate = (wordsRef, updatedWords) => {\n  // todo 修改值并写入文件\n  if (wordsRef === 'words1') {\n      words1.value = updatedWords\n    } else if (wordsRef === 'words2') {\n      words2.value = updatedWords\n    }\n}\n\nconst addWords = () => {\n  if (!newWords.value.trim()) return; // 空值检查\n\n  // 分割并处理新单词\n  const newWordsArray = newWords.value\n  .split('');\n\n  // 去重逻辑\n  const existingWords = new Set(words1.value.map(item => item.text));\n\n  // 过滤掉已存在的单词\n  const uniqueNewWords = newWordsArray.filter(word =>\n    !existingWords.has(word)\n  );\ndebugger\n  if (!uniqueNewWords.length) {\n    newWords.value = '';\n    return;\n  }\n\n  // 创建新单词对象数组\n  const newWordObjects = uniqueNewWords.map(word => ({\n    text: word,\n    status: ''\n  }));\n\n  // 更新数据\n  const updatedWords1 = [...words1.value, ...newWordObjects];\n  const updatedWords2 = [...words2.value, ...newWordObjects];\n\n  words1.value = updatedWords1;\n  words2.value = updatedWords2;\n\n  // 保存到本地存储\n  localStorage.setItem('first', JSON.stringify(updatedWords1));\n  localStorage.setItem('second', JSON.stringify(updatedWords2));\n  newWords.value = '';\n}\n\n</script>\n\n<style>\n.main {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  margin: 60px;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAM;;;;;;uBAAjBC,mBAAA,CA+BM,OA/BNC,UA+BM,GA9BJC,YAAA,CAYSC,iBAAA;IAZAC,IAAI,EAAE,IAAI;IAAGC,MAAM,EAAE,EAAE;IAAEN,KAAK,EAAC;;IAF5CO,OAAA,EAAAC,QAAA,CAGM,MAOS,CAPTL,YAAA,CAOSM,iBAAA;MAPAC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,CAAC;MAAGC,EAAE,EAAE;;MAH7CN,OAAA,EAAAC,QAAA,CAIQ,MAKA,CALAL,YAAA,CAKAW,mBAAA;QATRC,UAAA,EAKiBC,MAAA,CAAAC,QAAQ;QALzB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKiBH,MAAA,CAAAC,QAAQ,GAAAE,MAAA;QAChBC,IAAI,EAAE,CAAC;QACRC,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC;;MARpBC,CAAA;QAWMpB,YAAA,CAESM,iBAAA;MAFAC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,CAAC;MAAGC,EAAE,EAAE;;MAX7CN,OAAA,EAAAC,QAAA,CAYQ,MAA0D,CAA1DL,YAAA,CAA0DqB,oBAAA;QAA/CH,IAAI,EAAC,SAAS;QAAEI,OAAK,EAAET,MAAA,CAAAU;;QAZ1CnB,OAAA,EAAAC,QAAA,CAYoD,MAAEU,MAAA,QAAAA,MAAA,OAZtDS,gBAAA,CAYoD,IAAE,E;QAZtDJ,CAAA;;MAAAA,CAAA;;IAAAA,CAAA;MAeEpB,YAAA,CAgBUa,MAAA;IA/BZD,UAAA,EAeoBC,MAAA,CAAAY,UAAU;IAf9B,uBAAAV,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAeoBH,MAAA,CAAAY,UAAU,GAAAT,MAAA;;IAf9BZ,OAAA,EAAAC,QAAA,CAgBI,MAIc,CAJdL,YAAA,CAIca,MAAA;MAJDa,KAAK,EAAC,KAAK;MAACC,IAAI,EAAC;;MAhBlCvB,OAAA,EAAAC,QAAA,CAiBM,MAEkB,CAFlBL,YAAA,CAEkBa,MAAA;QAFDe,KAAK,EAAEf,MAAA,CAAAgB,MAAM;QACb,gBAAY,EAAAd,MAAA,QAAAA,MAAA,MAAGe,YAAY,IAAKjB,MAAA,CAAAkB,iBAAiB,WAAWD,YAAY;;MAlB/FV,CAAA;QAqBIpB,YAAA,CAIca,MAAA;MAJDa,KAAK,EAAC,MAAM;MAACC,IAAI,EAAC;;MArBnCvB,OAAA,EAAAC,QAAA,CAsBM,MAEkB,CAFlBL,YAAA,CAEkBa,MAAA;QAFDe,KAAK,EAAEf,MAAA,CAAAmB,MAAM;QACb,gBAAY,EAAAjB,MAAA,QAAAA,MAAA,MAAGe,YAAY,IAAKjB,MAAA,CAAAkB,iBAAiB,WAAWD,YAAY;;MAvB/FV,CAAA;QA0BIpB,YAAA,CAEca,MAAA;MAFDa,KAAK,EAAC,OAAO;MAACC,IAAI,EAAC;;MA1BpCvB,OAAA,EAAAC,QAAA,CA2BM,MAA6D,CAA7DL,YAAA,CAA6Da,MAAA;QAA1CoB,UAAU,EAAEpB,MAAA,CAAAqB;MAAS,wC;MA3B9Cd,CAAA;QA6BIpB,YAAA,CAC8Ea,MAAA;MADjEa,KAAK,EAAC,QAAQ;MAACC,IAAI,EAAC;;MA7BrCvB,OAAA,EAAAC,QAAA,CA8BM,MAA8D,CAA9DL,YAAA,CAA8Da,MAAA;QAA1CoB,UAAU,EAAEpB,MAAA,CAAAsB;MAAS,wC;MA9B/Cf,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}