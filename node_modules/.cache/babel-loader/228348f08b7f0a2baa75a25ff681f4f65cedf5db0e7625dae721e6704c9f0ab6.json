{"ast":null,"code":"export default {\n  name: 'WordManagement',\n  props: {\n    words: {\n      type: Array,\n      default: () => []\n    }\n  },\n  methods: {\n    updateStatus(word, index, newStatus) {\n      const updatedWords = [...this.words];\n      if (newStatus === updatedWords[index].status) {\n        updatedWords[index].status = '';\n      } else {\n        updatedWords[index].status = newStatus;\n      }\n      this.$emit('update:words', updatedWords);\n    }\n  }\n};","map":{"version":3,"names":["name","props","words","type","Array","default","methods","updateStatus","word","index","newStatus","updatedWords","status","$emit"],"sources":["/Users/xueqing/my-local-record/src/components/WordManagement.vue"],"sourcesContent":["<template>\n  <div class=\"words-management\">\n    <h1>单词数量: {{ words.length }}</h1>\n    <el-row :gutter=\"20\" :wrap=\"true\">\n      <el-col\n        v-for=\"(word, index) in words\"\n        :key=\"index\"\n        :span=\"8\"\n        :xs=\"8\"\n        :sm=\"4\"\n        :md=\"4\"\n        :lg=\"2\"\n        :style=\"{ marginBottom: '20px' }\"\n      >\n        <el-card shadow=\"hover\"\n                 class=\"box-card\"\n                 :body-class=\"word.status ? 'recognized' : (word.status === '' ? 'init' : 'unrecognized')\">\n          <div class=\"word-item\">\n            <div>{{ word.text }}</div>\n            <div style=\"display: flex;\">\n              <el-checkbox-button\n                :model-value=\"word.status === true\"\n                                  @change=\"() => updateStatus(word, index, true)\">✔️</el-checkbox-button>\n              <el-checkbox-button\n                :model-value=\"word.status === false\"\n                @change=\"() => updateStatus(word, index, false)\">❌</el-checkbox-button>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'WordManagement',\n  props: {\n    words: {\n      type: Array,\n      default: () => []\n    }\n  },\n  methods: {\n    updateStatus(word, index, newStatus) {\n      const updatedWords = [...this.words];\n\n      if (newStatus === updatedWords[index].status) {\n        updatedWords[index].status = '';\n      } else {\n        updatedWords[index].status = newStatus;\n      }\n\n      this.$emit('update:words', updatedWords);\n    }\n  }\n}\n</script>\n\n<style scoped>\n.words-management {\n  padding: 20px;\n}\n\n.words-container {\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n  margin-top: 20px;\n}\n\n.word-item {\n  font-size: 32px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;  /* 垂直居中 */\n  justify-content: center;  /* 水平居中 */\n}\n:deep(.init) {\n  background-color: #f5f7fa;\n}\n:deep(.recognized) {\n  background-color: #67c23a;\n}\n:deep(.unrecognized) {\n  background-color: #ff6666;\n}\n</style>"],"mappings":"AAmCA,eAAe;EACbA,IAAI,EAAE,gBAAgB;EACtBC,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,KAAK;MACXC,OAAO,EAAEA,CAAA,KAAM;IACjB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAACC,IAAI,EAAEC,KAAK,EAAEC,SAAS,EAAE;MACnC,MAAMC,YAAW,GAAI,CAAC,GAAG,IAAI,CAACT,KAAK,CAAC;MAEpC,IAAIQ,SAAQ,KAAMC,YAAY,CAACF,KAAK,CAAC,CAACG,MAAM,EAAE;QAC5CD,YAAY,CAACF,KAAK,CAAC,CAACG,MAAK,GAAI,EAAE;MACjC,OAAO;QACLD,YAAY,CAACF,KAAK,CAAC,CAACG,MAAK,GAAIF,SAAS;MACxC;MAEA,IAAI,CAACG,KAAK,CAAC,cAAc,EAAEF,YAAY,CAAC;IAC1C;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}