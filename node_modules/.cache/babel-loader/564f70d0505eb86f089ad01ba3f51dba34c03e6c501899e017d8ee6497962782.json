{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, onMounted } from 'vue';\nimport WordManagement from './components/WordManagement.vue';\nimport PoetryManagement from './components/PoetryManagement.vue';\nimport NewWordManagement from './components/NewWordManagement.vue';\nimport { ElTabs, ElTabPane } from 'element-plus';\nexport default {\n  __name: 'App',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const activeName = ref('first');\n    //todo 从文件读值\n    const words1 = ref([]);\n    const words2 = ref([]);\n    const newWords = ref('');\n    const poetries1 = ref(['静夜思']);\n    const poetries2 = ref(['春晓']);\n    onMounted(() => {\n      words1.value = JSON.parse(localStorage.getItem('first')) || [];\n      words2.value = JSON.parse(localStorage.getItem('second')) || [];\n    });\n    const handleWordsUpdate = (wordsRef, updatedWords) => {\n      // todo 修改值并写入文件\n      if (wordsRef === 'words1') {\n        words1.value = updatedWords;\n      } else if (wordsRef === 'words2') {\n        words2.value = updatedWords;\n      }\n    };\n    const addWords = () => {\n      if (!newWords.value.trim()) return; // 空值检查\n\n      // 分割并处理新单词\n      const newWordsArray = newWords.value.split('');\n\n      // 去重逻辑\n      const existingWords = new Set(words1.value.map(item => item.text));\n\n      // 过滤掉已存在的单词\n      const uniqueNewWords = newWordsArray.filter(word => !existingWords.has(word));\n      if (!uniqueNewWords.length) {\n        newWords.value = '';\n        return;\n      }\n\n      // 创建新单词对象数组\n      const newWordObjects = uniqueNewWords.map(word => ({\n        text: word,\n        status: ''\n      }));\n\n      // 更新数据\n      const updatedWords1 = [...words1.value, ...newWordObjects];\n      const updatedWords2 = [...words2.value, ...newWordObjects];\n      words1.value = updatedWords1;\n      words2.value = updatedWords2;\n\n      // 保存到本地存储\n      localStorage.setItem('first', JSON.stringify(updatedWords1));\n      localStorage.setItem('second', JSON.stringify(updatedWords2));\n      newWords.value = '';\n    };\n    const __returned__ = {\n      activeName,\n      words1,\n      words2,\n      newWords,\n      poetries1,\n      poetries2,\n      handleWordsUpdate,\n      addWords,\n      ref,\n      onMounted,\n      WordManagement,\n      PoetryManagement,\n      NewWordManagement,\n      get ElTabs() {\n        return ElTabs;\n      },\n      get ElTabPane() {\n        return ElTabPane;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","WordManagement","PoetryManagement","NewWordManagement","ElTabs","ElTabPane","activeName","words1","words2","newWords","poetries1","poetries2","value","JSON","parse","localStorage","getItem","handleWordsUpdate","wordsRef","updatedWords","addWords","trim","newWordsArray","split","existingWords","Set","map","item","text","uniqueNewWords","filter","word","has","length","newWordObjects","status","updatedWords1","updatedWords2","setItem","stringify"],"sources":["/Users/xueqing/my-local-record/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"main\">\n  <el-tabs v-model=\"activeName\">\n    <el-tab-pane label=\"航认字\" name=\"first\">\n      <WordManagement :words=\"words1\"\n                      @update:words=\"(updatedWords) => handleWordsUpdate('words2', updatedWords)\"\n      ></WordManagement>\n    </el-tab-pane>\n    <el-tab-pane label=\"皓皓认字\" name=\"second\">\n      <WordManagement :words=\"words2\"\n                      @update:words=\"(updatedWords) => handleWordsUpdate('words2', updatedWords)\"\n      ></WordManagement>\n    </el-tab-pane>\n    <el-tab-pane label=\"航古诗背诵\" name=\"third\">\n      <PoetryManagement :poetryList=\"poetries1\"></PoetryManagement>\n    </el-tab-pane>\n    <el-tab-pane label=\"皓皓古诗背诵\" name=\"fourth\">\n      <PoetryManagement  :poetryList=\"poetries2\"></PoetryManagement></el-tab-pane>\n    <el-tab-pane label=\"管理字库\" name=\"fifth\">\n      <NewWordManagement  :words=\"words1\"  @update:newWords=\"addWords\"></NewWordManagement>\n    </el-tab-pane>\n  </el-tabs>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport WordManagement from './components/WordManagement.vue'\nimport PoetryManagement from './components/PoetryManagement.vue'\nimport NewWordManagement from './components/NewWordManagement.vue'\nimport { ElTabs, ElTabPane } from 'element-plus'\n\nconst activeName = ref('first')\n//todo 从文件读值\nconst words1 = ref([])\nconst words2 = ref([])\nconst newWords = ref('')\nconst poetries1 = ref(['静夜思'])\nconst poetries2 = ref(['春晓'])\n\nonMounted(() => {\n  words1.value = JSON.parse(localStorage.getItem('first')) || [];\n  words2.value = JSON.parse(localStorage.getItem('second')) || [];\n})\n\nconst handleWordsUpdate = (wordsRef, updatedWords) => {\n  // todo 修改值并写入文件\n  if (wordsRef === 'words1') {\n      words1.value = updatedWords\n    } else if (wordsRef === 'words2') {\n      words2.value = updatedWords\n    }\n}\n\nconst addWords = () => {\n  if (!newWords.value.trim()) return; // 空值检查\n\n  // 分割并处理新单词\n  const newWordsArray = newWords.value\n  .split('');\n\n  // 去重逻辑\n  const existingWords = new Set(words1.value.map(item => item.text));\n\n  // 过滤掉已存在的单词\n  const uniqueNewWords = newWordsArray.filter(word =>\n    !existingWords.has(word)\n  );\n  if (!uniqueNewWords.length) {\n    newWords.value = '';\n    return;\n  }\n\n  // 创建新单词对象数组\n  const newWordObjects = uniqueNewWords.map(word => ({\n    text: word,\n    status: ''\n  }));\n\n  // 更新数据\n  const updatedWords1 = [...words1.value, ...newWordObjects];\n  const updatedWords2 = [...words2.value, ...newWordObjects];\n\n  words1.value = updatedWords1;\n  words2.value = updatedWords2;\n\n  // 保存到本地存储\n  localStorage.setItem('first', JSON.stringify(updatedWords1));\n  localStorage.setItem('second', JSON.stringify(updatedWords2));\n  newWords.value = '';\n}\n\n</script>\n\n<style>\n.main {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  margin: 60px;\n}\n</style>\n"],"mappings":";;;;;;;;;;AA0BA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAI;AACnC,OAAOC,cAAc,MAAM,iCAAgC;AAC3D,OAAOC,gBAAgB,MAAM,mCAAkC;AAC/D,OAAOC,iBAAiB,MAAM,oCAAmC;AACjE,SAASC,MAAM,EAAEC,SAAS,QAAQ,cAAa;;;;;;;IAE/C,MAAMC,UAAU,GAAGP,GAAG,CAAC,OAAO;IAC9B;IACA,MAAMQ,MAAM,GAAGR,GAAG,CAAC,EAAE;IACrB,MAAMS,MAAM,GAAGT,GAAG,CAAC,EAAE;IACrB,MAAMU,QAAQ,GAAGV,GAAG,CAAC,EAAE;IACvB,MAAMW,SAAS,GAAGX,GAAG,CAAC,CAAC,KAAK,CAAC;IAC7B,MAAMY,SAAS,GAAGZ,GAAG,CAAC,CAAC,IAAI,CAAC;IAE5BC,SAAS,CAAC,MAAM;MACdO,MAAM,CAACK,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;MAC9DR,MAAM,CAACI,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE;IACjE,CAAC;IAED,MAAMC,iBAAiB,GAAGA,CAACC,QAAQ,EAAEC,YAAY,KAAK;MACpD;MACA,IAAID,QAAQ,KAAK,QAAQ,EAAE;QACvBX,MAAM,CAACK,KAAK,GAAGO,YAAW;MAC5B,CAAC,MAAM,IAAID,QAAQ,KAAK,QAAQ,EAAE;QAChCV,MAAM,CAACI,KAAK,GAAGO,YAAW;MAC5B;IACJ;IAEA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;MACrB,IAAI,CAACX,QAAQ,CAACG,KAAK,CAACS,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC;;MAEpC;MACA,MAAMC,aAAa,GAAGb,QAAQ,CAACG,KAAI,CAClCW,KAAK,CAAC,EAAE,CAAC;;MAEV;MACA,MAAMC,aAAa,GAAG,IAAIC,GAAG,CAAClB,MAAM,CAACK,KAAK,CAACc,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC;;MAElE;MACA,MAAMC,cAAc,GAAGP,aAAa,CAACQ,MAAM,CAACC,IAAI,IAC9C,CAACP,aAAa,CAACQ,GAAG,CAACD,IAAI,CACzB,CAAC;MACD,IAAI,CAACF,cAAc,CAACI,MAAM,EAAE;QAC1BxB,QAAQ,CAACG,KAAK,GAAG,EAAE;QACnB;MACF;;MAEA;MACA,MAAMsB,cAAc,GAAGL,cAAc,CAACH,GAAG,CAACK,IAAI,KAAK;QACjDH,IAAI,EAAEG,IAAI;QACVI,MAAM,EAAE;MACV,CAAC,CAAC,CAAC;;MAEH;MACA,MAAMC,aAAa,GAAG,CAAC,GAAG7B,MAAM,CAACK,KAAK,EAAE,GAAGsB,cAAc,CAAC;MAC1D,MAAMG,aAAa,GAAG,CAAC,GAAG7B,MAAM,CAACI,KAAK,EAAE,GAAGsB,cAAc,CAAC;MAE1D3B,MAAM,CAACK,KAAK,GAAGwB,aAAa;MAC5B5B,MAAM,CAACI,KAAK,GAAGyB,aAAa;;MAE5B;MACAtB,YAAY,CAACuB,OAAO,CAAC,OAAO,EAAEzB,IAAI,CAAC0B,SAAS,CAACH,aAAa,CAAC,CAAC;MAC5DrB,YAAY,CAACuB,OAAO,CAAC,QAAQ,EAAEzB,IAAI,CAAC0B,SAAS,CAACF,aAAa,CAAC,CAAC;MAC7D5B,QAAQ,CAACG,KAAK,GAAG,EAAE;IACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}