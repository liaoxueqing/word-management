{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, onMounted } from 'vue';\nimport WordManagement from './components/WordManagement.vue';\n// import PoetryManagement from './components/PoetryManagement.vue'\nimport NewWordManagement from './components/NewWordManagement.vue';\nimport { ElTabs, ElTabPane } from 'element-plus';\nexport default {\n  __name: 'App',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const activeName = ref('first');\n    //todo 从文件读值\n    const words1 = ref([]);\n    const words2 = ref([]);\n    // const poetryList1 = ref(['静夜思'])\n    // const poetryList2 = ref(['春晓'])\n\n    onMounted(() => {\n      words1.value = JSON.parse(localStorage.getItem('first')) || [];\n      words2.value = JSON.parse(localStorage.getItem('second')) || [];\n    });\n    const handleWordsUpdate = (wordsRef, updatedWords) => {\n      // todo 修改值并写入文件\n      if (wordsRef === 'words1') {\n        words1.value = updatedWords;\n        localStorage.setItem('first', JSON.stringify(updatedWords));\n      } else if (wordsRef === 'words2') {\n        words2.value = updatedWords;\n        localStorage.setItem('second', JSON.stringify(updatedWords));\n      }\n    };\n    const addWords = newWords => {\n      if (!newWords.trim()) return; // 空值检查\n\n      // 分割并处理新单词\n      const newWordsArray = newWords.split('').filter(word => word.trim() !== '');\n\n      // 去重逻辑\n      const existingWords = new Set(words1.value.map(item => item.text));\n\n      // 过滤掉已存在的单词\n      const uniqueNewWords = newWordsArray.filter(word => !existingWords.has(word));\n      if (!uniqueNewWords.length) {\n        return;\n      }\n\n      // 创建新单词对象数组\n      const newWordObjects = uniqueNewWords.map(word => ({\n        text: word,\n        status: ''\n      }));\n\n      // 更新数据\n      const updatedWords1 = [...words1.value, ...newWordObjects];\n      const updatedWords2 = [...words2.value, ...newWordObjects];\n      words1.value = updatedWords1;\n      words2.value = updatedWords2;\n\n      // 保存到本地存储\n      localStorage.setItem('first', JSON.stringify(updatedWords1));\n      localStorage.setItem('second', JSON.stringify(updatedWords2));\n    };\n    const __returned__ = {\n      activeName,\n      words1,\n      words2,\n      handleWordsUpdate,\n      addWords,\n      ref,\n      onMounted,\n      WordManagement,\n      NewWordManagement,\n      get ElTabs() {\n        return ElTabs;\n      },\n      get ElTabPane() {\n        return ElTabPane;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","WordManagement","NewWordManagement","ElTabs","ElTabPane","activeName","words1","words2","value","JSON","parse","localStorage","getItem","handleWordsUpdate","wordsRef","updatedWords","setItem","stringify","addWords","newWords","trim","newWordsArray","split","filter","word","existingWords","Set","map","item","text","uniqueNewWords","has","length","newWordObjects","status","updatedWords1","updatedWords2"],"sources":["/Users/xueqing/my-local-record/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"main\">\n  <el-tabs v-model=\"activeName\">\n    <el-tab-pane label=\"航认字\" name=\"first\">\n      <WordManagement :words=\"words1\"\n                      @update:words=\"(updatedWords) => handleWordsUpdate('words1', updatedWords)\"\n      ></WordManagement>\n    </el-tab-pane>\n    <el-tab-pane label=\"皓皓认字\" name=\"second\">\n      <WordManagement :words=\"words2\"\n                      @update:words=\"(updatedWords) => handleWordsUpdate('words2', updatedWords)\"\n      ></WordManagement>\n    </el-tab-pane>\n<!--    <el-tab-pane label=\"航古诗背诵\" name=\"third\">-->\n<!--      <PoetryManagement :poetryList=\"poetryList1\"></PoetryManagement>-->\n<!--    </el-tab-pane>-->\n<!--    <el-tab-pane label=\"皓皓古诗背诵\" name=\"fourth\">-->\n<!--      <PoetryManagement  :poetryList=\"poetryList2\"></PoetryManagement>-->\n<!--    </el-tab-pane>-->\n    <el-tab-pane label=\"管理字库\" name=\"fifth\">\n      <NewWordManagement  :words=\"words1\" :words2=\"words2\"  @update:newWords=\"addWords\"></NewWordManagement>\n    </el-tab-pane>\n  </el-tabs>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport WordManagement from './components/WordManagement.vue'\n// import PoetryManagement from './components/PoetryManagement.vue'\nimport NewWordManagement from './components/NewWordManagement.vue'\nimport { ElTabs, ElTabPane } from 'element-plus'\n\nconst activeName = ref('first')\n//todo 从文件读值\nconst words1 = ref([])\nconst words2 = ref([])\n// const poetryList1 = ref(['静夜思'])\n// const poetryList2 = ref(['春晓'])\n\nonMounted(() => {\n  words1.value = JSON.parse(localStorage.getItem('first')) || [];\n  words2.value = JSON.parse(localStorage.getItem('second')) || [];\n})\n\nconst handleWordsUpdate = (wordsRef, updatedWords) => {\n  // todo 修改值并写入文件\n  if (wordsRef === 'words1') {\n      words1.value = updatedWords\n      localStorage.setItem('first', JSON.stringify(updatedWords));\n    } else if (wordsRef === 'words2') {\n      words2.value = updatedWords\n      localStorage.setItem('second', JSON.stringify(updatedWords));\n\n  }\n}\n\nconst addWords = (newWords) => {\n  if (!newWords.trim()) return; // 空值检查\n\n  // 分割并处理新单词\n  const newWordsArray = newWords\n  .split('').filter(word => word.trim() !== '');\n\n  // 去重逻辑\n  const existingWords = new Set(words1.value.map(item => item.text));\n\n  // 过滤掉已存在的单词\n  const uniqueNewWords = newWordsArray.filter(word =>\n    !existingWords.has(word)\n  );\n  if (!uniqueNewWords.length) {\n    return;\n  }\n\n  // 创建新单词对象数组\n  const newWordObjects = uniqueNewWords.map(word => ({\n    text: word,\n    status: ''\n  }));\n\n  // 更新数据\n  const updatedWords1 = [...words1.value, ...newWordObjects];\n  const updatedWords2 = [...words2.value, ...newWordObjects];\n\n  words1.value = updatedWords1;\n  words2.value = updatedWords2;\n\n  // 保存到本地存储\n  localStorage.setItem('first', JSON.stringify(updatedWords1));\n  localStorage.setItem('second', JSON.stringify(updatedWords2));\n}\n\n</script>\n\n<style>\n.main {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  margin: 60px;\n}\n</style>\n"],"mappings":";;;;;;;;;;AA2BA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAI;AACnC,OAAOC,cAAc,MAAM,iCAAgC;AAC3D;AACA,OAAOC,iBAAiB,MAAM,oCAAmC;AACjE,SAASC,MAAM,EAAEC,SAAS,QAAQ,cAAa;;;;;;;IAE/C,MAAMC,UAAU,GAAGN,GAAG,CAAC,OAAO;IAC9B;IACA,MAAMO,MAAM,GAAGP,GAAG,CAAC,EAAE;IACrB,MAAMQ,MAAM,GAAGR,GAAG,CAAC,EAAE;IACrB;IACA;;IAEAC,SAAS,CAAC,MAAM;MACdM,MAAM,CAACE,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;MAC9DL,MAAM,CAACC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE;IACjE,CAAC;IAED,MAAMC,iBAAiB,GAAGA,CAACC,QAAQ,EAAEC,YAAY,KAAK;MACpD;MACA,IAAID,QAAQ,KAAK,QAAQ,EAAE;QACvBR,MAAM,CAACE,KAAK,GAAGO,YAAW;QAC1BJ,YAAY,CAACK,OAAO,CAAC,OAAO,EAAEP,IAAI,CAACQ,SAAS,CAACF,YAAY,CAAC,CAAC;MAC7D,CAAC,MAAM,IAAID,QAAQ,KAAK,QAAQ,EAAE;QAChCP,MAAM,CAACC,KAAK,GAAGO,YAAW;QAC1BJ,YAAY,CAACK,OAAO,CAAC,QAAQ,EAAEP,IAAI,CAACQ,SAAS,CAACF,YAAY,CAAC,CAAC;MAEhE;IACF;IAEA,MAAMG,QAAQ,GAAIC,QAAQ,IAAK;MAC7B,IAAI,CAACA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC;;MAE9B;MACA,MAAMC,aAAa,GAAGF,QAAO,CAC5BG,KAAK,CAAC,EAAE,CAAC,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACJ,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;;MAE7C;MACA,MAAMK,aAAa,GAAG,IAAIC,GAAG,CAACpB,MAAM,CAACE,KAAK,CAACmB,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC;;MAElE;MACA,MAAMC,cAAc,GAAGT,aAAa,CAACE,MAAM,CAACC,IAAI,IAC9C,CAACC,aAAa,CAACM,GAAG,CAACP,IAAI,CACzB,CAAC;MACD,IAAI,CAACM,cAAc,CAACE,MAAM,EAAE;QAC1B;MACF;;MAEA;MACA,MAAMC,cAAc,GAAGH,cAAc,CAACH,GAAG,CAACH,IAAI,KAAK;QACjDK,IAAI,EAAEL,IAAI;QACVU,MAAM,EAAE;MACV,CAAC,CAAC,CAAC;;MAEH;MACA,MAAMC,aAAa,GAAG,CAAC,GAAG7B,MAAM,CAACE,KAAK,EAAE,GAAGyB,cAAc,CAAC;MAC1D,MAAMG,aAAa,GAAG,CAAC,GAAG7B,MAAM,CAACC,KAAK,EAAE,GAAGyB,cAAc,CAAC;MAE1D3B,MAAM,CAACE,KAAK,GAAG2B,aAAa;MAC5B5B,MAAM,CAACC,KAAK,GAAG4B,aAAa;;MAE5B;MACAzB,YAAY,CAACK,OAAO,CAAC,OAAO,EAAEP,IAAI,CAACQ,SAAS,CAACkB,aAAa,CAAC,CAAC;MAC5DxB,YAAY,CAACK,OAAO,CAAC,QAAQ,EAAEP,IAAI,CAACQ,SAAS,CAACmB,aAAa,CAAC,CAAC;IAC/D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}