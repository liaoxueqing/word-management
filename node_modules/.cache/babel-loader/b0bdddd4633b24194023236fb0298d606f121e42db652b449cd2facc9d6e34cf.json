{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"main\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_row, {\n    wrap: true,\n    gutter: 20,\n    class: \"create-area\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      xs: 24,\n      sm: 12,\n      md: 6,\n      lg: 2\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: _ctx.textarea,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.textarea = $event),\n        style: {\n          \"width\": \"240px\"\n        },\n        rows: 3,\n        type: \"textarea\",\n        placeholder: \"Please input\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _createVNode($setup[\"ElTabs\"], {\n    modelValue: $setup.activeName,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.activeName = $event)\n  }, {\n    default: _withCtx(() => [_createVNode($setup[\"ElTabPane\"], {\n      label: \"航认字\",\n      name: \"first\"\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"WordManagement\"], {\n        words: $setup.words1,\n        \"onUpdate:words\": _cache[1] || (_cache[1] = updatedWords => $setup.handleWordsUpdate('words2', updatedWords))\n      }, null, 8 /* PROPS */, [\"words\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode($setup[\"ElTabPane\"], {\n      label: \"皓皓认字\",\n      name: \"second\"\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"WordManagement\"], {\n        words: $setup.words2,\n        \"onUpdate:words\": _cache[2] || (_cache[2] = updatedWords => $setup.handleWordsUpdate('words2', updatedWords))\n      }, null, 8 /* PROPS */, [\"words\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode($setup[\"ElTabPane\"], {\n      label: \"航古诗背诵\",\n      name: \"third\"\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"PoetryManagement\"], {\n        poetryList: $setup.poetries1\n      }, null, 8 /* PROPS */, [\"poetryList\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode($setup[\"ElTabPane\"], {\n      label: \"皓皓古诗背诵\",\n      name: \"fourth\"\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"PoetryManagement\"], {\n        poetryList: $setup.poetries2\n      }, null, 8 /* PROPS */, [\"poetryList\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_row","wrap","gutter","default","_withCtx","_component_el_col","xs","sm","md","lg","_component_el_input","modelValue","_ctx","textarea","_cache","$event","style","rows","type","placeholder","_","$setup","activeName","label","name","words","words1","updatedWords","handleWordsUpdate","words2","poetryList","poetries1","poetries2"],"sources":["/Users/xueqing/my-local-record/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"main\">\n    <el-row :wrap=\"true\" :gutter=\"20\" class=\"create-area\">\n      <el-col :xs=\"24\" :sm=\"12\" :md=\"6\" :lg=\"2\">\n        <el-input\n        v-model=\"textarea\"\n        style=\"width: 240px\"\n        :rows=\"3\"\n        type=\"textarea\"\n        placeholder=\"Please input\"\n      />\n      </el-col>\n    </el-row>\n  <el-tabs v-model=\"activeName\">\n    <el-tab-pane label=\"航认字\" name=\"first\">\n      <WordManagement :words=\"words1\"\n                      @update:words=\"(updatedWords) => handleWordsUpdate('words2', updatedWords)\"\n      ></WordManagement>\n    </el-tab-pane>\n    <el-tab-pane label=\"皓皓认字\" name=\"second\">\n      <WordManagement :words=\"words2\"\n                      @update:words=\"(updatedWords) => handleWordsUpdate('words2', updatedWords)\"\n      ></WordManagement>\n    </el-tab-pane>\n    <el-tab-pane label=\"航古诗背诵\" name=\"third\">\n      <PoetryManagement :poetryList=\"poetries1\"></PoetryManagement>\n    </el-tab-pane>\n    <el-tab-pane label=\"皓皓古诗背诵\" name=\"fourth\">\n      <PoetryManagement  :poetryList=\"poetries2\"></PoetryManagement></el-tab-pane>\n  </el-tabs>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport WordManagement from './components/WordManagement.vue'\nimport PoetryManagement from './components/PoetryManagement.vue'\nimport { ElTabs, ElTabPane } from 'element-plus'\n\nconst activeName = ref('first')\n//todo 从文件读值\nconst words1 = ref([])\nconst words2 = ref([])\nconst poetries1 = ref(['静夜思'])\nconst poetries2 = ref(['春晓'])\n\nonMounted(() => {\n  words1.value = JSON.parse(localStorage.getItem('first')) || [];\n  words2.value = JSON.parse(localStorage.getItem('second')) || [];\n})\n\nconst handleWordsUpdate = (wordsRef, updatedWords) => {\n  // todo 修改值并写入文件\n  if (wordsRef === 'words1') {\n      words1.value = updatedWords\n    } else if (wordsRef === 'words2') {\n      words2.value = updatedWords\n    }\n}\n\n</script>\n\n<style>\n.main {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  margin: 60px;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAM;;;;;uBAAjBC,mBAAA,CA6BM,OA7BNC,UA6BM,GA5BJC,YAAA,CAUSC,iBAAA;IAVAC,IAAI,EAAE,IAAI;IAAGC,MAAM,EAAE,EAAE;IAAEN,KAAK,EAAC;;IAF5CO,OAAA,EAAAC,QAAA,CAGM,MAQS,CARTL,YAAA,CAQSM,iBAAA;MARAC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,EAAE;MAAGC,EAAE,EAAE,CAAC;MAAGC,EAAE,EAAE;;MAH7CN,OAAA,EAAAC,QAAA,CAIQ,MAMA,CANAL,YAAA,CAMAW,mBAAA;QAVRC,UAAA,EAKiBC,IAAA,CAAAC,QAAQ;QALzB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKiBH,IAAA,CAAAC,QAAQ,GAAAE,MAAA;QACjBC,KAAoB,EAApB;UAAA;QAAA,CAAoB;QACnBC,IAAI,EAAE,CAAC;QACRC,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC;;MATpBC,CAAA;;IAAAA,CAAA;MAaErB,YAAA,CAgBUsB,MAAA;IA7BZV,UAAA,EAaoBU,MAAA,CAAAC,UAAU;IAb9B,uBAAAR,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAaoBM,MAAA,CAAAC,UAAU,GAAAP,MAAA;;IAb9BZ,OAAA,EAAAC,QAAA,CAcI,MAIc,CAJdL,YAAA,CAIcsB,MAAA;MAJDE,KAAK,EAAC,KAAK;MAACC,IAAI,EAAC;;MAdlCrB,OAAA,EAAAC,QAAA,CAeM,MAEkB,CAFlBL,YAAA,CAEkBsB,MAAA;QAFDI,KAAK,EAAEJ,MAAA,CAAAK,MAAM;QACb,gBAAY,EAAAZ,MAAA,QAAAA,MAAA,MAAGa,YAAY,IAAKN,MAAA,CAAAO,iBAAiB,WAAWD,YAAY;;MAhB/FP,CAAA;QAmBIrB,YAAA,CAIcsB,MAAA;MAJDE,KAAK,EAAC,MAAM;MAACC,IAAI,EAAC;;MAnBnCrB,OAAA,EAAAC,QAAA,CAoBM,MAEkB,CAFlBL,YAAA,CAEkBsB,MAAA;QAFDI,KAAK,EAAEJ,MAAA,CAAAQ,MAAM;QACb,gBAAY,EAAAf,MAAA,QAAAA,MAAA,MAAGa,YAAY,IAAKN,MAAA,CAAAO,iBAAiB,WAAWD,YAAY;;MArB/FP,CAAA;QAwBIrB,YAAA,CAEcsB,MAAA;MAFDE,KAAK,EAAC,OAAO;MAACC,IAAI,EAAC;;MAxBpCrB,OAAA,EAAAC,QAAA,CAyBM,MAA6D,CAA7DL,YAAA,CAA6DsB,MAAA;QAA1CS,UAAU,EAAET,MAAA,CAAAU;MAAS,wC;MAzB9CX,CAAA;QA2BIrB,YAAA,CAC8EsB,MAAA;MADjEE,KAAK,EAAC,QAAQ;MAACC,IAAI,EAAC;;MA3BrCrB,OAAA,EAAAC,QAAA,CA4BM,MAA8D,CAA9DL,YAAA,CAA8DsB,MAAA;QAA1CS,UAAU,EAAET,MAAA,CAAAW;MAAS,wC;MA5B/CZ,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}