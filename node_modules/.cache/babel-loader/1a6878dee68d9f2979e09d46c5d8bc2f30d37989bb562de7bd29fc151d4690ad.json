{"ast":null,"code":"import { ref } from 'vue';\nimport WordManagement from './components/WordManagement.vue';\nimport PoetryManagement from './components/PoetryManagement.vue';\nimport { ElTabs, ElTabPane } from 'element-plus';\nexport default {\n  __name: 'App',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const activeName = ref('first');\n    const words1 = ref([{\n      text: '一',\n      status: true\n    }, {\n      text: '二',\n      status: false\n    }, {\n      text: '三',\n      status: ''\n    }]);\n    const words2 = ref([{\n      text: '六',\n      status: true\n    }]);\n    const poetries1 = ref(['静夜思']);\n    const poetries2 = ref(['春晓']);\n    const handleWordsUpdate = (wordsRef, updatedWords) => {\n      if (wordsRef === 'words1') {\n        words1.value = updatedWords;\n      } else if (wordsRef === 'words2') {\n        words2.value = updatedWords;\n      }\n    };\n    const __returned__ = {\n      activeName,\n      words1,\n      words2,\n      poetries1,\n      poetries2,\n      handleWordsUpdate,\n      ref,\n      WordManagement,\n      PoetryManagement,\n      get ElTabs() {\n        return ElTabs;\n      },\n      get ElTabPane() {\n        return ElTabPane;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","WordManagement","PoetryManagement","ElTabs","ElTabPane","activeName","words1","text","status","words2","poetries1","poetries2","handleWordsUpdate","wordsRef","updatedWords","value"],"sources":["/Users/xueqing/my-local-record/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"main\">\n  <el-tabs v-model=\"activeName\">\n    <el-tab-pane label=\"航认字\" name=\"first\">\n      <WordManagement :words=\"words1\"\n                      @update:words=\"(updatedWords) => handleWordsUpdate('words2', updatedWords)\"\n      ></WordManagement>\n    </el-tab-pane>\n    <el-tab-pane label=\"皓皓认字\" name=\"second\">\n      <WordManagement :words=\"words2\"\n                      @update:words=\"(updatedWords) => handleWordsUpdate('words2', updatedWords)\"\n      ></WordManagement>\n    </el-tab-pane>\n    <el-tab-pane label=\"航古诗背诵\" name=\"third\">\n      <PoetryManagement :poetryList=\"poetries1\"></PoetryManagement>\n    </el-tab-pane>\n    <el-tab-pane label=\"皓皓古诗背诵\" name=\"fourth\">\n      <PoetryManagement  :poetryList=\"poetries2\"></PoetryManagement></el-tab-pane>\n  </el-tabs>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport WordManagement from './components/WordManagement.vue'\nimport PoetryManagement from './components/PoetryManagement.vue'\nimport { ElTabs, ElTabPane } from 'element-plus'\n\nconst activeName = ref('first')\n\nconst words1 = ref([{text:'一',status:true},{text:'二',status:false},{text:'三',status:''}])\nconst words2 = ref([{text:'六',status:true}])\nconst poetries1 = ref(['静夜思'])\nconst poetries2 = ref(['春晓'])\n\nconst handleWordsUpdate = (wordsRef, updatedWords) => {\n    if (wordsRef === 'words1') {\n      words1.value = updatedWords\n    } else if (wordsRef === 'words2') {\n      words2.value = updatedWords\n    }\n}\n\n</script>\n\n<style>\n.main {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  margin: 60px;\n}\n</style>\n"],"mappings":"AAuBA,SAASA,GAAG,QAAQ,KAAI;AACxB,OAAOC,cAAc,MAAM,iCAAgC;AAC3D,OAAOC,gBAAgB,MAAM,mCAAkC;AAC/D,SAASC,MAAM,EAAEC,SAAS,QAAQ,cAAa;;;;;;;IAE/C,MAAMC,UAAU,GAAGL,GAAG,CAAC,OAAO;IAE9B,MAAMM,MAAM,GAAGN,GAAG,CAAC,CAAC;MAACO,IAAI,EAAC,GAAG;MAACC,MAAM,EAAC;IAAI,CAAC,EAAC;MAACD,IAAI,EAAC,GAAG;MAACC,MAAM,EAAC;IAAK,CAAC,EAAC;MAACD,IAAI,EAAC,GAAG;MAACC,MAAM,EAAC;IAAE,CAAC,CAAC;IACxF,MAAMC,MAAM,GAAGT,GAAG,CAAC,CAAC;MAACO,IAAI,EAAC,GAAG;MAACC,MAAM,EAAC;IAAI,CAAC,CAAC;IAC3C,MAAME,SAAS,GAAGV,GAAG,CAAC,CAAC,KAAK,CAAC;IAC7B,MAAMW,SAAS,GAAGX,GAAG,CAAC,CAAC,IAAI,CAAC;IAE5B,MAAMY,iBAAiB,GAAGA,CAACC,QAAQ,EAAEC,YAAY,KAAK;MAClD,IAAID,QAAQ,KAAK,QAAQ,EAAE;QACzBP,MAAM,CAACS,KAAK,GAAGD,YAAW;MAC5B,CAAC,MAAM,IAAID,QAAQ,KAAK,QAAQ,EAAE;QAChCJ,MAAM,CAACM,KAAK,GAAGD,YAAW;MAC5B;IACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}