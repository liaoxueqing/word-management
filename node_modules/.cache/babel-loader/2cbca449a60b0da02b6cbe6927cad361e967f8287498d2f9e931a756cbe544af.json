{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"words-management\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($props.words.length), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.wrods, (word, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, _toDisplayString(word), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$props","words","length","_Fragment","_renderList","_ctx","wrods","word","index","key"],"sources":["/Users/xueqing/my-local-record/src/components/WordManagement.vue"],"sourcesContent":["<template>\n  <div class=\"words-management\">\n    <h1>{{ words.length }}</h1>\n    <div v-for=\"(word,index) in wrods\" :key=\"index\">{{word}}</div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'WordManagement',\n  props: {\n    words: Array\n  }\n}\n</script>\n\n<style scoped>\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAkB;;uBAA7BC,mBAAA,CAGM,OAHNC,UAGM,GAFJC,mBAAA,CAA2B,YAAAC,gBAAA,CAApBC,MAAA,CAAAC,KAAK,CAACC,MAAM,mB,kBACnBN,mBAAA,CAA8DO,SAAA,QAHlEC,WAAA,CAGgCC,IAAA,CAAAC,KAAK,EAHrC,CAGiBC,IAAI,EAACC,KAAK;yBAAvBZ,mBAAA,CAA8D;MAA1Ba,GAAG,EAAED;IAAK,GAAAT,gBAAA,CAAIQ,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}